name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # 毎日午前2時に実行（JST 11:00）
    - cron: '0 17 * * *'
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Enable debug mode'
        required: false
        default: false

env:
  NODE_VERSION: '20'
  MONGODB_VERSION: '7.0'

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        include:
          - browser: chromium
            project: chromium
          - browser: firefox
            project: firefox
          - browser: webkit
            project: webkit

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🗄️ Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ env.MONGODB_VERSION }}
          mongodb-replica-set: test-rs
          mongodb-db: simple-board-test

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: 🔍 Verify MongoDB connection
        run: |
          npm install -g mongosh
          mongosh --eval "db.version()"
        env:
          MONGODB_URI: mongodb://127.0.0.1:27017/simple-board-test

      - name: 🌱 Seed test data
        run: npm run db:seed
        env:
          MONGODB_URI: mongodb://127.0.0.1:27017/simple-board-test

      - name: 🏗️ Build application
        run: npm run build
        env:
          MONGODB_URI: mongodb://127.0.0.1:27017/simple-board-test

      - name: 🧪 Run E2E tests - ${{ matrix.browser }}
        run: npx playwright test --project=${{ matrix.project }}
        env:
          MONGODB_URI: mongodb://127.0.0.1:27017/simple-board-test
          CI: true
          DEBUG: ${{ github.event.inputs.debug_enabled == 'true' && 'pw:api' || '' }}

      - name: 📊 Generate test report
        if: always()
        run: npx playwright show-report --host 0.0.0.0 --port 9323 &
        
      - name: 📸 Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}-${{ github.run_id }}
          path: |
            playwright-report/
            test-results/
          retention-days: 7

      - name: 🎬 Upload video recordings
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-videos-${{ matrix.browser }}-${{ github.run_id }}
          path: test-results/**/video.webm
          retention-days: 3
          if-no-files-found: ignore

      - name: 📷 Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-screenshots-${{ matrix.browser }}-${{ github.run_id }}
          path: test-results/**/*.png
          retention-days: 3
          if-no-files-found: ignore

      - name: 🔍 Upload traces
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-traces-${{ matrix.browser }}-${{ github.run_id }}
          path: test-results/**/trace.zip
          retention-days: 3
          if-no-files-found: ignore

      - name: 💬 Comment PR with results
        uses: daun/playwright-report-comment@v3
        if: github.event_name == 'pull_request'
        with:
          report-file: test-results/results.json
          report-tag: e2e-test-${{ matrix.browser }}
          report-url: ${{ steps.upload-report.outputs.artifact-url }}

  test-summary:
    name: E2E Test Summary
    runs-on: ubuntu-latest
    needs: e2e-test
    if: always()
    
    steps:
      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: playwright-report-*
          merge-multiple: true

      - name: 📊 Merge test results
        run: |
          echo "## E2E Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Results by Browser" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          for report in playwright-report-*/index.html; do
            if [ -f "$report" ]; then
              browser=$(echo $report | sed 's/playwright-report-\(.*\)-.*/\1/')
              echo "- **$browser**: [View Report]($report)" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Test reports, screenshots, and videos are available in the Actions artifacts" >> $GITHUB_STEP_SUMMARY

      - name: 🚨 Notify on failure
        if: failure() && github.ref == 'refs/heads/main'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `E2E Tests Failed on main branch - ${new Date().toISOString().split('T')[0]}`,
              body: `E2E tests failed on the main branch.\n\nWorkflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['bug', 'e2e-test', 'automated']
            })

  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🗄️ Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: ${{ env.MONGODB_VERSION }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright
        run: npx playwright install chromium

      - name: 🏗️ Build application
        run: npm run build

      - name: ⚡ Run performance tests
        run: |
          npx playwright test --project=chromium --grep @performance
        env:
          MONGODB_URI: mongodb://127.0.0.1:27017/simple-board-test

      - name: 📈 Upload performance results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: performance-results-${{ github.run_id }}
          path: performance-results/
          retention-days: 30