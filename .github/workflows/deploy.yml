name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test Before Deploy
    uses: ./.github/workflows/test.yml
    secrets: inherit

  deploy-staging:
    name: Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        MONGODB_URI: ${{ secrets.STAGING_MONGODB_URI }}
    
    - name: Deploy to Vercel (Staging)
      id: deploy
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        alias-domains: |
          staging-{{BRANCH}}.vercel.app
    
    - name: Run smoke tests
      run: |
        npm install -D @playwright/test
        npx playwright install chromium
        npx playwright test e2e/smoke.spec.ts
      env:
        BASE_URL: ${{ steps.deploy.outputs.url }}
      continue-on-error: true

  deploy-production:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --production
    
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        MONGODB_URI: ${{ secrets.PRODUCTION_MONGODB_URI }}
    
    - name: Deploy to Vercel (Production)
      id: deploy
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        production: true
    
    - name: Create deployment record
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha,
            environment: 'production',
            auto_merge: false,
            required_contexts: [],
            description: 'Production deployment'
          });
    
    - name: Notify deployment
      if: success()
      run: |
        echo "ðŸš€ Successfully deployed to production!"
        echo "URL: ${{ steps.deploy.outputs.url }}"