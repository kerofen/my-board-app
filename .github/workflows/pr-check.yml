name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  size-check:
    name: PR Size Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Check PR size
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const additions = pr.additions;
          const deletions = pr.deletions;
          const total = additions + deletions;
          
          let label = '';
          if (total < 10) {
            label = 'size/XS';
          } else if (total < 50) {
            label = 'size/S';
          } else if (total < 200) {
            label = 'size/M';
          } else if (total < 500) {
            label = 'size/L';
          } else {
            label = 'size/XL';
          }
          
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            labels: [label]
          });

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: high

  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint -- --format json --output-file eslint-report.json
      continue-on-error: true
    
    - name: Annotate Code Linting Results
      uses: ataylorme/eslint-annotate-action@v3
      if: always()
      with:
        report-json: "eslint-report.json"
    
    - name: Check TypeScript
      run: npx tsc --noEmit
    
    - name: Check formatting
      run: npx prettier --check "**/*.{js,jsx,ts,tsx,json,md}"
      continue-on-error: true

  test-coverage:
    name: Test Coverage Report
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests with coverage
      run: npm run test:coverage -- --ci --json --outputFile=test-results.json
      continue-on-error: true
    
    - name: Coverage Report
      uses: ArtiomTr/jest-coverage-report-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        skip-step: all
        coverage-file: ./coverage/lcov.info
        base-coverage-file: ./coverage/lcov.info
        annotations: coverage
    
    - name: Comment PR with test results
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const fs = require('fs');
          let testResults = '';
          
          try {
            const results = JSON.parse(fs.readFileSync('test-results.json', 'utf8'));
            const { numPassedTests, numFailedTests, numTotalTests } = results;
            const passRate = ((numPassedTests / numTotalTests) * 100).toFixed(1);
            
            testResults = `
            ## 🧪 Test Results
            
            - ✅ Passed: ${numPassedTests}
            - ❌ Failed: ${numFailedTests}
            - 📊 Total: ${numTotalTests}
            - 📈 Pass Rate: ${passRate}%
            `;
          } catch (e) {
            testResults = '## ⚠️ Test results not available';
          }
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: testResults
          });

  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v11
      with:
        urls: |
          http://localhost:3000
        uploadArtifacts: true
        temporaryPublicStorage: true
      continue-on-error: true

  preview-deploy:
    name: Deploy Preview
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Deploy Preview to Vercel
      uses: amondnet/vercel-action@v25
      id: vercel-deploy
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        github-comment: true
        github-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Comment preview URL
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `🔗 Preview URL: ${{ steps.vercel-deploy.outputs.preview-url }}`
          });