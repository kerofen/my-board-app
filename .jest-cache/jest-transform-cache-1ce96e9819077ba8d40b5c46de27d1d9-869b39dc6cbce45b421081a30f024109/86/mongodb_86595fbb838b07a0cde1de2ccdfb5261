66b54a50d004ddcdf55c9088d45d022a
"use strict";

/* istanbul ignore next */
function cov_1b254wsx3j() {
  var path = "C:\\Users\\janne\\Documents\\workspace\\my-board-app\\lib\\mongodb.ts";
  var hash = "c58ca51f170e389f63a300af7408051556ea97ff";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\janne\\Documents\\workspace\\my-board-app\\lib\\mongodb.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 77
        }
      },
      "4": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 15,
          column: 6
        }
      },
      "5": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "6": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 20,
          column: 1
        }
      },
      "7": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 50
        }
      },
      "8": {
        start: {
          line: 21,
          column: 13
        },
        end: {
          line: 21,
          column: 28
        }
      },
      "9": {
        start: {
          line: 22,
          column: 0
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "10": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 39
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "14": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "15": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "16": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 38
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 80
        }
      },
      "18": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 42,
          column: 11
        }
      },
      "19": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "20": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 28
        }
      },
      "21": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 43
        }
      },
      "23": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 16
        }
      },
      "26": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 23
        }
      },
      "27": {
        start: {
          line: 53,
          column: 17
        },
        end: {
          line: 53,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 33
          }
        },
        loc: {
          start: {
            line: 12,
            column: 39
          },
          end: {
            line: 16,
            column: 1
          }
        },
        line: 12
      },
      "2": {
        name: "dbConnect",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 24
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 39,
            column: 75
          },
          end: {
            line: 39,
            column: 76
          }
        },
        loc: {
          start: {
            line: 39,
            column: 87
          },
          end: {
            line: 42,
            column: 9
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 35
          },
          end: {
            line: 13,
            column: 38
          }
        }, {
          start: {
            line: 13,
            column: 41
          },
          end: {
            line: 15,
            column: 5
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 13,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 11
          },
          end: {
            line: 13,
            column: 14
          }
        }, {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 32
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 0
          },
          end: {
            line: 20,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 0
          },
          end: {
            line: 20,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 0
          },
          end: {
            line: 27,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 0
          },
          end: {
            line: 27,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\janne\\Documents\\workspace\\my-board-app\\lib\\mongodb.ts"],
      sourcesContent: ["import mongoose from 'mongoose';\n\nconst MONGODB_URI = process.env.MONGODB_URI!;\n\nif (!MONGODB_URI) {\n  throw new Error('MONGODB_URI\u304C\u74B0\u5883\u5909\u6570\u306B\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093');\n}\n\ninterface MongooseCache {\n  conn: typeof mongoose | null;\n  promise: Promise<typeof mongoose> | null;\n}\n\ndeclare global {\n  var mongoose: MongooseCache | undefined;\n}\n\nlet cached = global.mongoose;\n\nif (!cached) {\n  cached = global.mongoose = { conn: null, promise: null };\n}\n\nasync function dbConnect() {\n  if (cached!.conn) {\n    console.log('\u65E2\u5B58\u306EMongoDB\u63A5\u7D9A\u3092\u4F7F\u7528');\n    return cached!.conn;\n  }\n\n  if (!cached!.promise) {\n    const opts = {\n      bufferCommands: false,\n    };\n\n    console.log('MongoDB\u306B\u63A5\u7D9A\u4E2D...');\n    console.log('\u63A5\u7D9A\u5148:', MONGODB_URI.replace(/\\/\\/.*@/, '//<credentials>@'));\n    \n    cached!.promise = mongoose.connect(MONGODB_URI, opts).then((mongoose) => {\n      console.log('MongoDB\u63A5\u7D9A\u6210\u529F\uFF01');\n      return mongoose;\n    });\n  }\n\n  try {\n    cached!.conn = await cached!.promise;\n  } catch (e) {\n    console.error('MongoDB\u63A5\u7D9A\u30A8\u30E9\u30FC:', e);\n    cached!.promise = null;\n    throw e;\n  }\n\n  return cached!.conn;\n}\n\nexport default dbConnect;"],
      names: ["MONGODB_URI", "process", "env", "Error", "cached", "global", "mongoose", "conn", "promise", "dbConnect", "console", "log", "opts", "bufferCommands", "replace", "connect", "then", "e", "error"],
      mappings: ";;;;+BAsDA;;;eAAA;;;iEAtDqB;;;;;;AAErB,MAAMA,cAAcC,QAAQC,GAAG,CAACF,WAAW;AAE3C,IAAI,CAACA,aAAa;IAChB,MAAM,IAAIG,MAAM;AAClB;AAWA,IAAIC,SAASC,OAAOC,QAAQ;AAE5B,IAAI,CAACF,QAAQ;IACXA,SAASC,OAAOC,QAAQ,GAAG;QAAEC,MAAM;QAAMC,SAAS;IAAK;AACzD;AAEA,eAAeC;IACb,IAAIL,OAAQG,IAAI,EAAE;QAChBG,QAAQC,GAAG,CAAC;QACZ,OAAOP,OAAQG,IAAI;IACrB;IAEA,IAAI,CAACH,OAAQI,OAAO,EAAE;QACpB,MAAMI,OAAO;YACXC,gBAAgB;QAClB;QAEAH,QAAQC,GAAG,CAAC;QACZD,QAAQC,GAAG,CAAC,QAAQX,YAAYc,OAAO,CAAC,WAAW;QAEnDV,OAAQI,OAAO,GAAGF,iBAAQ,CAACS,OAAO,CAACf,aAAaY,MAAMI,IAAI,CAAC,CAACV;YAC1DI,QAAQC,GAAG,CAAC;YACZ,OAAOL;QACT;IACF;IAEA,IAAI;QACFF,OAAQG,IAAI,GAAG,MAAMH,OAAQI,OAAO;IACtC,EAAE,OAAOS,GAAG;QACVP,QAAQQ,KAAK,CAAC,iBAAiBD;QAC/Bb,OAAQI,OAAO,GAAG;QAClB,MAAMS;IACR;IAEA,OAAOb,OAAQG,IAAI;AACrB;MAEA,WAAeE"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c58ca51f170e389f63a300af7408051556ea97ff"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b254wsx3j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b254wsx3j();
cov_1b254wsx3j().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1b254wsx3j().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1b254wsx3j().f[0]++;
    cov_1b254wsx3j().s[2]++;
    return _default;
  }
});
const _mongoose =
/* istanbul ignore next */
(/*#__PURE__*/cov_1b254wsx3j().s[3]++, _interop_require_default(require("mongoose")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1b254wsx3j().f[1]++;
  cov_1b254wsx3j().s[4]++;
  return /* istanbul ignore next */(cov_1b254wsx3j().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1b254wsx3j().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1b254wsx3j().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1b254wsx3j().b[0][1]++, {
    default: obj
  });
}
const MONGODB_URI =
/* istanbul ignore next */
(cov_1b254wsx3j().s[5]++, process.env.MONGODB_URI);
/* istanbul ignore next */
cov_1b254wsx3j().s[6]++;
if (!MONGODB_URI) {
  /* istanbul ignore next */
  cov_1b254wsx3j().b[2][0]++;
  cov_1b254wsx3j().s[7]++;
  throw new Error('MONGODB_URIが環境変数に設定されていません');
} else
/* istanbul ignore next */
{
  cov_1b254wsx3j().b[2][1]++;
}
let cached =
/* istanbul ignore next */
(cov_1b254wsx3j().s[8]++, global.mongoose);
/* istanbul ignore next */
cov_1b254wsx3j().s[9]++;
if (!cached) {
  /* istanbul ignore next */
  cov_1b254wsx3j().b[3][0]++;
  cov_1b254wsx3j().s[10]++;
  cached = global.mongoose = {
    conn: null,
    promise: null
  };
} else
/* istanbul ignore next */
{
  cov_1b254wsx3j().b[3][1]++;
}
async function dbConnect() {
  /* istanbul ignore next */
  cov_1b254wsx3j().f[2]++;
  cov_1b254wsx3j().s[11]++;
  if (cached.conn) {
    /* istanbul ignore next */
    cov_1b254wsx3j().b[4][0]++;
    cov_1b254wsx3j().s[12]++;
    console.log('既存のMongoDB接続を使用');
    /* istanbul ignore next */
    cov_1b254wsx3j().s[13]++;
    return cached.conn;
  } else
  /* istanbul ignore next */
  {
    cov_1b254wsx3j().b[4][1]++;
  }
  cov_1b254wsx3j().s[14]++;
  if (!cached.promise) {
    /* istanbul ignore next */
    cov_1b254wsx3j().b[5][0]++;
    const opts =
    /* istanbul ignore next */
    (cov_1b254wsx3j().s[15]++, {
      bufferCommands: false
    });
    /* istanbul ignore next */
    cov_1b254wsx3j().s[16]++;
    console.log('MongoDBに接続中...');
    /* istanbul ignore next */
    cov_1b254wsx3j().s[17]++;
    console.log('接続先:', MONGODB_URI.replace(/\/\/.*@/, '//<credentials>@'));
    /* istanbul ignore next */
    cov_1b254wsx3j().s[18]++;
    cached.promise = _mongoose.default.connect(MONGODB_URI, opts).then(mongoose => {
      /* istanbul ignore next */
      cov_1b254wsx3j().f[3]++;
      cov_1b254wsx3j().s[19]++;
      console.log('MongoDB接続成功！');
      /* istanbul ignore next */
      cov_1b254wsx3j().s[20]++;
      return mongoose;
    });
  } else
  /* istanbul ignore next */
  {
    cov_1b254wsx3j().b[5][1]++;
  }
  cov_1b254wsx3j().s[21]++;
  try {
    /* istanbul ignore next */
    cov_1b254wsx3j().s[22]++;
    cached.conn = await cached.promise;
  } catch (e) {
    /* istanbul ignore next */
    cov_1b254wsx3j().s[23]++;
    console.error('MongoDB接続エラー:', e);
    /* istanbul ignore next */
    cov_1b254wsx3j().s[24]++;
    cached.promise = null;
    /* istanbul ignore next */
    cov_1b254wsx3j().s[25]++;
    throw e;
  }
  /* istanbul ignore next */
  cov_1b254wsx3j().s[26]++;
  return cached.conn;
}
const _default =
/* istanbul ignore next */
(cov_1b254wsx3j().s[27]++, dbConnect);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsIk1PTkdPREJfVVJJIiwiY292XzFiMjU0d3N4M2oiLCJzIiwicHJvY2VzcyIsImVudiIsImIiLCJFcnJvciIsImNhY2hlZCIsImdsb2JhbCIsIm1vbmdvb3NlIiwiY29ubiIsInByb21pc2UiLCJkYkNvbm5lY3QiLCJmIiwiY29uc29sZSIsImxvZyIsIm9wdHMiLCJidWZmZXJDb21tYW5kcyIsInJlcGxhY2UiLCJfbW9uZ29vc2UiLCJkZWZhdWx0IiwiY29ubmVjdCIsInRoZW4iLCJlIiwiZXJyb3IiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGphbm5lXFxEb2N1bWVudHNcXHdvcmtzcGFjZVxcbXktYm9hcmQtYXBwXFxsaWJcXG1vbmdvZGIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vbmdvb3NlIGZyb20gJ21vbmdvb3NlJztcblxuY29uc3QgTU9OR09EQl9VUkkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSSE7XG5cbmlmICghTU9OR09EQl9VUkkpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdNT05HT0RCX1VSSeOBjOeSsOWig+WkieaVsOOBq+ioreWumuOBleOCjOOBpuOBhOOBvuOBm+OCkycpO1xufVxuXG5pbnRlcmZhY2UgTW9uZ29vc2VDYWNoZSB7XG4gIGNvbm46IHR5cGVvZiBtb25nb29zZSB8IG51bGw7XG4gIHByb21pc2U6IFByb21pc2U8dHlwZW9mIG1vbmdvb3NlPiB8IG51bGw7XG59XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgdmFyIG1vbmdvb3NlOiBNb25nb29zZUNhY2hlIHwgdW5kZWZpbmVkO1xufVxuXG5sZXQgY2FjaGVkID0gZ2xvYmFsLm1vbmdvb3NlO1xuXG5pZiAoIWNhY2hlZCkge1xuICBjYWNoZWQgPSBnbG9iYWwubW9uZ29vc2UgPSB7IGNvbm46IG51bGwsIHByb21pc2U6IG51bGwgfTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZGJDb25uZWN0KCkge1xuICBpZiAoY2FjaGVkIS5jb25uKSB7XG4gICAgY29uc29sZS5sb2coJ+aXouWtmOOBrk1vbmdvRELmjqXntprjgpLkvb/nlKgnKTtcbiAgICByZXR1cm4gY2FjaGVkIS5jb25uO1xuICB9XG5cbiAgaWYgKCFjYWNoZWQhLnByb21pc2UpIHtcbiAgICBjb25zdCBvcHRzID0ge1xuICAgICAgYnVmZmVyQ29tbWFuZHM6IGZhbHNlLFxuICAgIH07XG5cbiAgICBjb25zb2xlLmxvZygnTW9uZ29EQuOBq+aOpee2muS4rS4uLicpO1xuICAgIGNvbnNvbGUubG9nKCfmjqXntprlhYg6JywgTU9OR09EQl9VUkkucmVwbGFjZSgvXFwvXFwvLipALywgJy8vPGNyZWRlbnRpYWxzPkAnKSk7XG4gICAgXG4gICAgY2FjaGVkIS5wcm9taXNlID0gbW9uZ29vc2UuY29ubmVjdChNT05HT0RCX1VSSSwgb3B0cykudGhlbigobW9uZ29vc2UpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKCdNb25nb0RC5o6l57aa5oiQ5Yqf77yBJyk7XG4gICAgICByZXR1cm4gbW9uZ29vc2U7XG4gICAgfSk7XG4gIH1cblxuICB0cnkge1xuICAgIGNhY2hlZCEuY29ubiA9IGF3YWl0IGNhY2hlZCEucHJvbWlzZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ01vbmdvRELmjqXntprjgqjjg6njg7w6JywgZSk7XG4gICAgY2FjaGVkIS5wcm9taXNlID0gbnVsbDtcbiAgICB0aHJvdyBlO1xuICB9XG5cbiAgcmV0dXJuIGNhY2hlZCEuY29ubjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGJDb25uZWN0OyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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